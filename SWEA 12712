T = int(input())

def flies(n,m,matrix):
    ans = []
    dp = [(i,0) for i in range (-(m-1), m) ]
    dp.extend([(0,i) for i in range (-(m-1), m) ])
    dp = list(set(dp))
    
    dx_ = [(i,i) for i in range(-(m-1), m)]
    dx_.extend([(i,-i) for i in range(-(m-1),m)])
    dx_= list(set(dx_))
    
    for x in range(n):
        for y in range(n):
            sum1, sum2 = 0,0
            for dx,dy in dp:
                nx, ny = x+dx, y+dy
                if nx >= 0 and nx < n and ny >= 0 and ny < n:
                    sum1 += matrix[ny][nx]
            
            for dx, dy in dx_:
                nx, ny = x+dx, y+dy
                if nx >= 0 and nx < n and ny >= 0 and ny < n:
                    sum2 += matrix[ny][nx]
            
            ans.append(max(sum1, sum2))
               
    return max(ans)
    
for i in range(T):
    n,m = map(int, input().split())
    matrix = []
    for _ in range(n):
        matrix.append(list(map(int, input().split())))
    
    ans = flies(n,m,matrix)
    print('#{} {}'.format(i+1, ans))
